<?php
/**
 * Widget API: AMF_page_widget class
 *
 * @package AMF_Manufactur
 * @since 4.4.0
 */

/**
 * Core class used to implement a page widget.
 *
 * @since 1.0.0
 *
 * @see WP_Widget
 */
class AMF_page_widget extends WP_Widget {

	/**
	 * Sets up a new page widget instance.
	 *
	 * @since 1.0.0
	 * @access public
	 */
	public function __construct() {
		$widget_ops = array(
			'classname' => 'page_widget',
			'description' => __( 'A list of your page.' ,'AMF_Manufactur'),
			'customize_selective_refresh' => true,
		);
		parent::__construct( 'page', __( 'Footer Pages','AMF_Manufactur' ), $widget_ops );
	}

	/**
	 * Outputs the content for the current page widget instance.
	 *
	 * @since 2.8.0
	 * @access public
	 *
	 * @param array $args     Display arguments including 'before_title', 'after_title',
	 *                        'before_widget', and 'after_widget'.
	 * @param array $instance Settings for the current page widget instance.
	 */
	public function widget( $args, $instance ) {

		/**
		 * Filters the widget title.
		 *
		 * @since 2.6.0
		 *
		 * @param string $title    The widget title. Default 'page'.
		 * @param array  $instance An array of the widget's settings.
		 * @param mixed  $id_base  The widget ID.
		 */
		$title = apply_filters( 'widget_title', empty( $instance['title'] ) ? __( 'Quick Links' ,'AMF_Manufactur') : $instance['title'] , $instance , $this->id_base );

		$include = empty( $instance['include'] ) ? '' : $instance['include'];

		$out = wp_list_pages( apply_filters( 'widget_pages_args', array(
			'title_li'    => '',
			'echo'        => 0,
			'include'     => $include
		) ) );

		if ( ! empty( $out ) ) {
			echo $args['before_widget'];
			if ( $title ) {
				echo $args['before_title'] . $title . $args['after_title'];
			}
		?>
				<div class="top-buffer ">
					<div class="quick-links page_links">
						<ul>
							<li>
								<?php echo $out; ?>
							</li>
						</ul>
					</div>		
				</div>
		<?php
			echo $args['after_widget'];
		}
	}

	/**
	 * Handles updating settings for the current page widget instance.
	 *
	 * @since 1.0.0
	 * @access public
	 *
	 * @param array $new_instance New settings for this instance as input by the user via
	 *                            WP_Widget::form().
	 * @param array $old_instance Old settings for this instance.
	 * @return array Updated settings to save.
	 */
	public function update( $new_instance, $old_instance ) {
		$instance = $old_instance;
		$instance['title'] = sanitize_text_field( $new_instance['title'] );
		$instance['include'] = sanitize_text_field( $new_instance['include'] );
		return $instance;
		}
	/**
	 * Outputs the settings form for the page by id  widget.
	 *
	 * @since 1.0.0
	 * @access public
	 *
	 * @param array $instance Current settings.
	 */
	public function form( $instance ) {
		$instance = wp_parse_args( (array) $instance, array( 'title' => '', 'include' => '0,') );
		?>
		<p>
			<label for="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>"><?php _e( 'Title:','AMF_Manufactur' ); ?></label>
			<input class="widefat" id="<?php echo esc_attr( $this->get_field_id('title') ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'title' ) ); ?>" type="text" value="<?php echo esc_attr( $instance['title'] ); ?>" />
		</p>
		<p>
			<label for="<?php echo esc_attr( $this->get_field_id( 'include' ) ); ?>"><?php _e( 'page ids:','AMF_Manufactur' ); ?></label>
			<input type="text" value="<?php echo esc_attr( $instance['include'] ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'include' ) ); ?>" id="<?php echo esc_attr( $this->get_field_id( 'include' ) ); ?>" class="widefat" />
			<br />
			<small><?php _e( 'Remove 0 and add you page IDs, separated by commas.' ,'AMF_Manufactur'); ?></small>
		</p>
		<?php
	}

}
remove_filter( 'widget_pages_args', 'filter_widget_pages_args', 10, 1 ); 
function wpse_list_pages( $output ){
    $output = preg_replace( '/<a(.*?)>(.*?)<\/a>/', '<a$1 title="$2">$2</a>', $output);
    return $output;
}
add_filter('wp_list_pages', 'wpse_list_pages');
// Register and load the widget
function AMF_loadpage_widget() {
	register_widget( 'AMF_page_widget' );
}
add_action( 'widgets_init', 'AMF_loadpage_widget' );